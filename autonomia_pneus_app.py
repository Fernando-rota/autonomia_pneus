import streamlit as st
import pandas as pd
import plotly.express as px
import re

st.set_page_config(page_title="Gest√£o de Pneus", layout="wide")

st.title("üìä Gest√£o de Pneus")

# Upload
arquivo = st.file_uploader("Carregue a planilha de pneus", type=["xlsx", "xls"])

if arquivo:
    # L√™ a planilha
    df = pd.read_excel(arquivo, engine="openpyxl")

    # ---------------------------
    # Tratamento da coluna Observa√ß√£o
    # ---------------------------
    def extrair_km_observacao(texto):
        if pd.isna(texto):
            return None
        match = re.search(r"(\d+)\s*km", str(texto))
        if match:
            return int(match.group(1))
        return None

    df["Observa√ß√£o - Km"] = df["Observa√ß√£o"].apply(extrair_km_observacao)

    # ---------------------------
    # Km Rodado at√© Aferi√ß√£o
    # ---------------------------
    df["Km Rodado at√© Aferi√ß√£o"] = df["Observa√ß√£o - Km"] - df["Hod√¥metro Inicial"]

    # ---------------------------
    # Abas
    # ---------------------------
    aba1, aba2 = st.tabs(["üìå Indicadores", "üìà Gr√°ficos"])

    with aba1:
        st.subheader("üìå Indicadores Gerais")

        col1, col2, col3 = st.columns(3)
        total_pneus = df["Refer√™ncia"].nunique()
        media_sulco = df["Aferi√ß√£o - Sulco"].dropna().mean()
        media_km = df["Km Rodado at√© Aferi√ß√£o"].dropna().mean()

        col1.metric("Total de Pneus", total_pneus)
        col2.metric("M√©dia Sulco (mm)", f"{media_sulco:.2f}")
        col3.metric("M√©dia Km at√© Aferi√ß√£o", f"{media_km:,.0f} km")

        st.dataframe(df)

    with aba2:
        st.subheader("üìà Gr√°ficos")

        # Gr√°fico de desgaste (Sulco x Km Rodado at√© Aferi√ß√£o)
        if "Km Rodado at√© Aferi√ß√£o" in df.columns and "Aferi√ß√£o - Sulco" in df.columns:
            fig_desgaste = px.scatter(
                df,
                x="Km Rodado at√© Aferi√ß√£o",
                y="Aferi√ß√£o - Sulco",
                color="Marca (Atual)",
                title="Rela√ß√£o entre Km Rodado e Sulco",
                hover_data=["Ve√≠culo - Placa", "Modelo (Atual)"]
            )
            st.plotly_chart(fig_desgaste, use_container_width=True)
